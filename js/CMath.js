var SIN_PI=Math.sin(Math.PI),DOUBLE_PI=2*Math.PI,HALF_PI=Math.PI/2,SIN_HALF_PI=Math.sin(HALF_PI),SIN_DOUBLE_PI=Math.sin(DOUBLE_PI);function angleBetweenVectors(t,e){e=Math.acos(dotProductV2(t,e)/(t.length()*e.length()));return!0===isNaN(e)?0:e}function centerBetweenPointsV2(t,e){var g=new CVector2;return g.set((t.getX()+e.getX())/2,(t.getY()+e.getY())/2),g}function distance2(t,e){return(e.getX()-t.getX())*(e.getX()-t.getX())+(e.getY()-t.getY())*(e.getY()-t.getY())}function distance(t,e){return Math.sqrt((e.getX()-t.getX())*(e.getX()-t.getX())+(e.getY()-t.getY())*(e.getY()-t.getY()))}function easeQuintIn(t,e,g,n){return g*(t/=n)*t*t*t*t+e}function easeCubicInOut(t,e,g,n){if(!(n<t))return(t/=n/2)<1?g/2*t*t*t+e:g/2*((t-=2)*t*t+2)+e}function easeBackIn(t,e,g,n,r){return g*(t/=n)*t*(((r=null==r?1.70158:r)+1)*t-r)+e}function easeElasticIn(t,e,g,n,r,o){return 0==t?e:1==(t/=n)?e+g:(o=o||.3*n,g=!r||r<Math.abs(g)?(r=g,o/4):o/(2*Math.PI)*Math.asin(g/r),-(r*Math.pow(2,10*--t)*Math.sin((t*n-g)*(2*Math.PI)/o))+e)}function toRadian(t){return t*(Math.PI/180)}function toDegree(t){return t*(180/Math.PI)}function dotProductV2(t,e){return t.getX()*e.getX()+t.getY()*e.getY()}function perpProductV2(t,e){return t.getX()*e.getY()-t.getY()*e.getX()}function reflectVectorV2(t,e){var g=new CVector2,n=dotProductV2(t,e);return g.set(t.getX()-2*n*e.getX(),t.getY()-2*n*e.getY()),g}function classifySphere(t,e,g,n){g=e.getX()*t.getX()+e.getY()*t.getY()+planeDistance(e,g);return Math.abs(g)<n?0<=g?"INTERSECT FRONT":"INTERSECT BEHIND":n<=g?"FRONT":"BEHIND"}function planeDistance(t,e){return-(t.getX()*e.getX()+t.getY()*e.getY())}function randRange(t,e){return Math.floor(Math.random()*(e-t+1))+t}function randRangeReal(t,e){return Math.random()*(e-t+1)+t}function rotateVector2D(t,e){var g=e.getX()*Math.cos(t)+e.getY()*Math.sin(t),t=e.getX()*-Math.sin(t)+e.getY()*Math.cos(t);e.set(g,t)}function closestPointOnLine(t,e,g){var n=new CVector2;n.setV(g),n.subtract(t);g=new CVector2;g.setV(e),g.subtract(t),g.normalize();n=dotProductV2(g,n);return n<=0?t:n>=distance(t,e)?e:(g.scalarProduct(n),g.add(t),g)}function rectInRect(t,e){return e.x<=t.x&&e.y<=t.y&&e.width>=t.width&&e.height>=t.height}function collideEdgeWithCircle(t,e,g,n){t=closestPointOnLine(t.getPointA(),t.getPointB(),e),e=distance(e,t);return n&&(n.iDistance=e,n.vClosestPoint=t),!(g<e)}function collideEdgeWithEdge(t,e,g){var n=t.getPointA(),r=t.getPointB(),o=e.getPointA(),t=e.getPointB(),e=n.getX()*(t.getY()-o.getY())+r.getX()*(o.getY()-t.getY())+t.getX()*(r.getY()-n.getY())+o.getX()*(n.getY()-r.getY());return 0!=e&&(t=(n.getX()*(t.getY()-o.getY())+o.getX()*(n.getY()-t.getY())+t.getX()*(o.getY()-n.getY()))/e,e=-(n.getX()*(o.getY()-r.getY())+r.getX()*(n.getY()-o.getY())+o.getX()*(r.getY()-n.getY()))/e,g&&g.set(n.getX()+t*(r.getX()-n.getX()),n.getY()+t*(r.getY()-n.getY())),0<=t&&t<=1&&0<=e&&e<=1)}function lineInterpolate(t,e,g){for(var n,r,o=t.getPointA(),i=t.getPointB(),a=Math.abs(o.getX()-i.getX()),Y=Math.abs(o.getY()-i.getY()),t=i.getX()-o.getX(),i=i.getY()-o.getY(),u=Math.sqrt(Math.pow(a,2)+Math.pow(Y,2))/e,c=t/u,X=i/u,s=new Array,p=u-(g=void 0===g||u<g?u:g);p<u;p++)n=o.getX()+c*p,r=o.getY()+X*p,s.push(new CVector2(n,r));return s}function intersect2D_Segments(t,e,g,n){var r=new CVector2,o=new CVector2,i=new CVector2;r.set(t.m_pB.getX()-t.m_pA.getX(),t.m_pB.getY()-t.m_pA.getY()),o.set(e.m_pB.getX()-e.m_pA.getX(),e.m_pB.getY()-e.m_pA.getY()),i.set(t.m_pA.getX()-e.m_pA.getX(),t.m_pA.getY()-e.m_pA.getY());var a=perpProductV2(r,o);if(Math.abs(a)<1e-8){if(0!=perpProductV2(r,i)||0!=perpProductV2(o,i))return 0;var Y=dotProductV2(r,r),u=dotProductV2(o,o);if(0==Y&&0==u)return t.m_pA.getX()!=e.m_pA.getX()||t.m_pA.getY()!=e.m_pA.getY()?0:(g=t.m_pA,1);if(0==Y)return 0==inSegment(t.m_pA,e)?0:(g=t.m_pA,1);if(0==u)return 0==inSegment(e.m_pA,t)?0:(g=e.m_pA,1);var c,Y=new CVector2;return(Y.set(t.m_pB.getX()-e.m_pA.getX(),t.m_pB.getY()-e.m_pA.getY()),(u=0!=o.getX()?(c=i.getX()/o.getX(),Y.getX()/o.getX()):(c=i.getY()/o.getY(),Y.getY()/o.getY()))<c&&(Y=c,c=u,u=Y),1<c||u<0)?0:(c=c<0?0:c)==(u=1<u?1:u)?(g.set(e.m_pA.getX()+c*o.getX(),e.m_pA.getY()+c*o.getY()),1):(g.set(e.m_pA.getX()+c*o.getX(),e.m_pA.getY()+c*o.getY()),n.set(e.m_pA.getX()+u*o.getX(),e.m_pA.getY()+u*o.getY()),2)}o=perpProductV2(o,i)/a;if(o<0||1<o)return 0;a=perpProductV2(r,i)/a;return a<0||1<a?0:(g.set(t.m_pA.getX()+o*r.getX(),t.m_pA.getY()+o*r.getY()),1)}function inSegment(t,e){if(e.m_pA.getX()!=e.m_pB.getX()){if(e.m_pA.getX()<=t.getX()&&t.getX()<=e.m_pB.getX())return 1;if(e.m_pA.getX()>=t.getX()&&t.getX()>=e.m_pB.getX())return 1}else{if(e.m_pA.getY()<=t.getY()&&t.getY()<=e.m_pB.getY())return 1;if(e.m_pA.getY()>=t.getY()&&t.getY()>=e.m_pB.getY())return 1}return 0}function detectCollisionPointCircle(t,e,g){var n=t.getX()-e.getX(),e=t.getY()-e.getY();return sqrt(n*n+e*e)<=g}function tweenVectors(t,e,g,n){return g.set(t.getX()+n*(e.getX()-t.getX()),t.getY()+n*(e.getY()-t.getY())),g}